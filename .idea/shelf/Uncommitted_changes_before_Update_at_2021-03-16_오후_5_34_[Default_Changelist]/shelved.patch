Index: app/src/main/java/animalapp/info/MyPage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package animalapp.info;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.loader.content.CursorLoader;\r\n\r\nimport android.content.Intent;\r\nimport android.database.Cursor;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Toast;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.io.File;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class MyPage extends AppCompatActivity {\r\n\r\n    FirebaseAuth firebaseAuth;\r\n    FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n    private FirebaseStorage storage = FirebaseStorage.getInstance();\r\n    private StorageReference imgRef;\r\n    private Boolean aBoolean = true;\r\n\r\n    EditText my_page_name_et, my_page_phone_et, my_page_pwd_ed;\r\n    EditText my_page_pet_name_et, my_page_pet_type_et, my_page_pet_gender_et;\r\n    Button my_btn_save, my_btn_cancel, my_page_photo_btn;\r\n    ImageView my_page_imgview;\r\n    String Email,profile_fileName,profile_fileName_revice, sign_profile;\r\n    Uri imguri;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_my_page);\r\n\r\n        firebaseAuth = FirebaseAuth.getInstance();\r\n        FirebaseUser user = firebaseAuth.getCurrentUser();\r\n\r\n        my_page_name_et = findViewById(R.id.my_page_name_et);\r\n        my_page_phone_et = findViewById(R.id.my_page_phone_et);\r\n        my_page_pwd_ed = findViewById(R.id.my_page_pwd_et);\r\n        my_page_pet_name_et = findViewById(R.id.my_page_pet_name_et);\r\n        my_page_pet_type_et = findViewById(R.id.my_page_pet_type_et);\r\n        my_page_pet_gender_et = findViewById(R.id.my_page_pet_gender_et);\r\n        my_page_photo_btn = findViewById(R.id.my_page_photo_btn);\r\n        my_btn_save = findViewById(R.id.my_btn_save);\r\n        my_btn_cancel = findViewById(R.id.mypage_cancel_btn);\r\n        my_page_imgview = findViewById(R.id.my_page_imgview);\r\n\r\n        Email = user.getEmail();\r\n\r\n        db.collection(\"users\").whereEqualTo(\"id\", Email)\r\n                .get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            for (DocumentSnapshot documentSnapshot : task.getResult()) {\r\n                                my_page_name_et.setText((String) documentSnapshot.get(\"name\"));\r\n                                my_page_phone_et.setText((String) documentSnapshot.get(\"phone\"));\r\n                                my_page_pwd_ed.setText((String) documentSnapshot.get(\"pwd\"));\r\n                                my_page_pet_name_et.setText((String) documentSnapshot.get(\"pet_name\"));\r\n                                my_page_pet_type_et.setText((String) documentSnapshot.get(\"pet_type\"));\r\n                                my_page_pet_gender_et.setText((String) documentSnapshot.get(\"pet_gender\"));\r\n                                sign_profile = ((String)documentSnapshot.get(\"sign_profile\"));\r\n                                Log.d(\"a123\",sign_profile);\r\n                                imguri = Uri.parse((String) documentSnapshot.get(\"sign_profile\"));\r\n                                Log.d(\"a1234\",String.valueOf(imguri));\r\n                                profile_fileName = (String)documentSnapshot.get(\"profile_fileName\");\r\n                                Glide.with(getApplicationContext()).load(imguri).into(my_page_imgview);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n\r\n        my_page_photo_btn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(Intent.ACTION_PICK);\r\n                intent.setType(\"image/*\");\r\n                startActivityForResult(intent, 1);\r\n                aBoolean = false;\r\n            }\r\n        });\r\n\r\n        my_btn_save.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if(aBoolean == false) {\r\n                    if(!sign_profile.equals(\"null\")) {\r\n                        storage.getReference().child(\"sign_up_profile\").child(profile_fileName).delete(); //스토리지에서 파일이름을 찾아서 삭제\r\n                    }\r\n\r\n                    imgRef = storage.getReferenceFromUrl(\"gs://animalapp-cadbb.appspot.com/sign_up_profile\");\r\n\r\n                    imgRef = storage.getReference();\r\n                    Uri file = Uri.fromFile(new File(getPath(imguri))); // 절대경로uri를 file에 할당\r\n\r\n                    // stroage images에 절대경로파일 저장\r\n                    StorageReference riversRef = imgRef.child(\"sign_up_profile/\" + file.getLastPathSegment());\r\n                    UploadTask uploadTask = riversRef.putFile(file);\r\n\r\n                    profile_fileName_revice = file.getLastPathSegment(); //스토리지에 저장된는 이름\r\n\r\n\r\n                    // Register observers to listen for when the download is done or if it fails\r\n                    uploadTask.addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception exception) {\r\n                            // Handle unsuccessful uploads\r\n                        }\r\n                    })\r\n                            .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                                @Override\r\n                                public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                                    Task<Uri> uri = taskSnapshot.getStorage().getDownloadUrl();\r\n                                    while (!uri.isComplete()) ;\r\n                                    Uri uri1 = uri.getResult();\r\n\r\n                                    String profile = String.valueOf(uri1); //이미지 토큰값\r\n\r\n                                    Map<String, Object> post = new HashMap<>();\r\n\r\n                                    post.put(\"id\", Email);\r\n                                    post.put(\"name\", my_page_name_et.getText().toString());\r\n                                    post.put(\"phone\", my_page_phone_et.getText().toString());\r\n                                    post.put(\"pwd\", my_page_pwd_ed.getText().toString());\r\n                                    post.put(\"pet_name\", my_page_pet_name_et.getText().toString());\r\n                                    post.put(\"pet_type\", my_page_pet_type_et.getText().toString());\r\n                                    post.put(\"pet_gender\", my_page_pet_gender_et.getText().toString());\r\n                                    post.put(\"sign_profile\", profile);\r\n                                    post.put(\"profile_fileName\", profile_fileName_revice);\r\n\r\n                                    firebaseAuth.getCurrentUser().updatePassword(my_page_pwd_ed.getText().toString());  //firebaseAuth에서 비밀번호 변경(패치)\r\n\r\n                                    db.collection(\"users\").document(user.getUid()).set(post)\r\n                                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                @Override\r\n                                                public void onSuccess(Void aVoid) {\r\n                                                    Toast.makeText(MyPage.this, \"수정 성공\", Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            })\r\n                                            .addOnFailureListener(new OnFailureListener() {\r\n                                                @Override\r\n                                                public void onFailure(@NonNull Exception e) {\r\n                                                    Toast.makeText(MyPage.this, \"수정 실패\", Toast.LENGTH_SHORT).show();\r\n                                                }\r\n                                            });\r\n                                }\r\n                            });\r\n                    aBoolean = true;\r\n                }\r\n                else {  //이미지 변경 안했을때 수정\r\n                    Map<String, Object> post = new HashMap<>();\r\n\r\n                    post.put(\"id\", Email);\r\n                    post.put(\"name\", my_page_name_et.getText().toString());\r\n                    post.put(\"phone\", my_page_phone_et.getText().toString());\r\n                    post.put(\"pwd\", my_page_pwd_ed.getText().toString());\r\n                    post.put(\"pet_name\", my_page_pet_name_et.getText().toString());\r\n                    post.put(\"pet_type\", my_page_pet_type_et.getText().toString());\r\n                    post.put(\"pet_gender\", my_page_pet_gender_et.getText().toString());\r\n                    post.put(\"sign_profile\", sign_profile);\r\n                    post.put(\"profile_fileName\", profile_fileName);\r\n\r\n                    firebaseAuth.getCurrentUser().updatePassword(my_page_pwd_ed.getText().toString());\r\n\r\n                    db.collection(\"users\").document(user.getUid()).set(post)\r\n                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                @Override\r\n                                public void onSuccess(Void aVoid) {\r\n                                    Toast.makeText(MyPage.this, \"수정 성공\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            })\r\n                            .addOnFailureListener(new OnFailureListener() {\r\n                                @Override\r\n                                public void onFailure(@NonNull Exception e) {\r\n                                    Toast.makeText(MyPage.this, \"수정 실패\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        my_btn_cancel.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        switch (requestCode) {\r\n            case 1:\r\n                if (resultCode == RESULT_OK) {\r\n                    //선택한 이미지의 경로 얻어오기\r\n                    imguri = data.getData();\r\n                    Glide.with(getApplicationContext()).load(imguri).into(my_page_imgview);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    public String getPath(Uri uri) {\r\n        String[] proj = {MediaStore.Images.Media.DATA};\r\n        CursorLoader cursorLoader = new CursorLoader(this, uri, proj, null, null, null);\r\n        Cursor cursor = cursorLoader.loadInBackground();\r\n\r\n        int index = cursor.getColumnIndexOrThrow(MediaStore.Images.Media.DATA);\r\n\r\n        cursor.moveToFirst();\r\n\r\n        return cursor.getString(index);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/animalapp/info/MyPage.java	(revision 4f411ffd7cb3ab1955ff437afa7a3c777a87dd04)
+++ app/src/main/java/animalapp/info/MyPage.java	(date 1615881501557)
@@ -89,9 +89,9 @@
                                 my_page_pet_type_et.setText((String) documentSnapshot.get("pet_type"));
                                 my_page_pet_gender_et.setText((String) documentSnapshot.get("pet_gender"));
                                 sign_profile = ((String)documentSnapshot.get("sign_profile"));
-                                Log.d("a123",sign_profile);
+                                //Log.d("a123",sign_profile);
                                 imguri = Uri.parse((String) documentSnapshot.get("sign_profile"));
-                                Log.d("a1234",String.valueOf(imguri));
+                              //  Log.d("a1234",String.valueOf(imguri));
                                 profile_fileName = (String)documentSnapshot.get("profile_fileName");
                                 Glide.with(getApplicationContext()).load(imguri).into(my_page_imgview);
                             }
