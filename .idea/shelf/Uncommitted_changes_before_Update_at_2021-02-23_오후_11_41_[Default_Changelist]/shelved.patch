Index: app/src/main/java/animalapp/info/fragment_calendar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package animalapp.info;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\npublic class fragment_calendar extends Fragment {\r\n    View view;\r\n\r\n    public fragment_calendar() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    public static fragment_calendar newInstance(){\r\n        fragment_calendar frg_cal=new fragment_calendar();\r\n        return frg_cal;\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_calendar, container, false);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/animalapp/info/fragment_calendar.java	(revision d6cdaa4604c5c1add42993dff7ceddc3ee8c5507)
+++ app/src/main/java/animalapp/info/fragment_calendar.java	(date 1614090865702)
@@ -1,15 +1,52 @@
 package animalapp.info;
 
+import android.app.AlertDialog;
+import android.graphics.Color;
+import android.os.AsyncTask;
+import android.os.Build;
 import android.os.Bundle;
 
+import androidx.annotation.NonNull;
+import androidx.annotation.RequiresApi;
 import androidx.fragment.app.Fragment;
+import androidx.lifecycle.MutableLiveData;
+import androidx.recyclerview.widget.RecyclerView;
 
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.CalendarView;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
 
-public class fragment_calendar extends Fragment {
-    View view;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.FirebaseFirestore;
+
+import com.google.firebase.firestore.QuerySnapshot;
+import com.prolificinteractive.materialcalendarview.CalendarDay;
+import com.prolificinteractive.materialcalendarview.CalendarMode;
+import com.prolificinteractive.materialcalendarview.MaterialCalendarView;
+import com.prolificinteractive.materialcalendarview.OnDateSelectedListener;
+
+import java.time.format.DateTimeFormatter;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.List;
+
+
+@RequiresApi(api = Build.VERSION_CODES.O)
+public class fragment_calendar extends Fragment  {
+
+    private static final DateTimeFormatter FORMATTER = DateTimeFormatter.ofPattern("EEE, d MMM yyyy");
+    MaterialCalendarView calendarView;
+    TextView user_name;
+    FirebaseAuth mAuth;
+
 
     public fragment_calendar() {
         // Required empty public constructor
@@ -20,12 +57,97 @@
         return frg_cal;
     }
 
-
-
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
+        View view=inflater.inflate(R.layout.fragment_calendar,null);
+        user_name=(TextView)view.findViewById(R.id.user_name);
+        calendarView= (MaterialCalendarView)view.findViewById(R.id.materialCalendar);
+        calendarView.state().edit()
+                .setFirstDayOfWeek(Calendar.SUNDAY)
+                .setMinimumDate(CalendarDay.from(2017, 0, 1)) // 달력의 시작
+                .setMaximumDate(CalendarDay.from(2030, 11, 31)) // 달력의 끝
+                .setCalendarDisplayMode(CalendarMode.MONTHS)
+                .commit();
+
+        calendarView.addDecorators(
+                new SundayDecorator(),
+                new SaturdayDecorator(),
+                new onDatDecorator());
+
+        getData();
+
         // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.fragment_calendar, container, false);
+        return view;
+
     }
-}
\ No newline at end of file
+
+    private void getData(){
+        FirebaseUser user= FirebaseAuth.getInstance().getCurrentUser();//현재 로그인한 유저 ->Authentication(?)
+        FirebaseFirestore db=FirebaseFirestore.getInstance();//firestore db
+        final String current= user.getEmail();//로그인할 때 그 이메일 가져옴
+        db.collection("users")//firestore users
+                .whereEqualTo("id",current)//firestore id와 user email같은 곳?
+                .get()//가져와
+                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                    @Override
+                    public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                        if(task.isSuccessful()){
+                            for(DocumentSnapshot documentSnapshot : task.getResult()){
+                                user_name.setText((CharSequence) documentSnapshot.get("pet_name")+"의 달력");
+                            }
+                        }
+                    }
+                });
+    }
+    private class ApiSimulator extends AsyncTask<Void, Void, List<CalendarDay>> {
+
+        String[] Time_Result;
+
+        ApiSimulator(String[] Time_Result) {
+            this.Time_Result = Time_Result;
+        }
+
+        @Override
+        protected List<CalendarDay> doInBackground(@NonNull Void... voids) {
+            try {
+                Thread.sleep(500);
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+
+            Calendar calendar = Calendar.getInstance();
+            ArrayList<CalendarDay> dates = new ArrayList<>();
+
+            /*특정날짜 달력에 점표시해주는곳*/
+            /*월은 0이 1월 년,일은 그대로*/
+            //string 문자열인 Time_Result 을 받아와서 ,를 기준으로짜르고 string을 int 로 변환
+            for (int i = 0; i < Time_Result.length; i++) {
+                CalendarDay day = CalendarDay.from(calendar);
+                String[] time = Time_Result[i].split(",");
+                int year = Integer.parseInt(time[0]);
+                int month = Integer.parseInt(time[1]);
+                int dayy = Integer.parseInt(time[2]);
+
+                dates.add(day);
+                calendar.set(year, month - 1, dayy);
+            }
+
+            return dates;
+        }
+//        protected void onPostExecute(@NonNull List<CalendarDay> calendarDays) {
+//            super.onPostExecute(calendarDays);
+//
+//            if (isFinishing()) {
+//                return;
+//            }
+//
+//            calendarView.addDecorator(new EventDecorator(Color.GREEN, calendarDays,getActivity()));
+//        }
+
+
+
+
+    }
+}
+
Index: app/src/main/res/layout/fragment_calendar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    tools:context=\".fragment_calendar\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"#FFEB3B\"\r\n        android:text=\"하하\" />\r\n\r\n</FrameLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_calendar.xml	(revision d6cdaa4604c5c1add42993dff7ceddc3ee8c5507)
+++ app/src/main/res/layout/fragment_calendar.xml	(date 1614062344638)
@@ -3,13 +3,33 @@
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     tools:context=".fragment_calendar">
 
     <!-- TODO: Update blank fragment layout -->
-    <TextView
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:background="#FFEB3B"
-        android:text="하하" />
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        >
+
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/user_name"/>
+        <com.prolificinteractive.materialcalendarview.MaterialCalendarView
+            android:id="@+id/materialCalendar"
+            app:mcv_selectionColor="#d2d2d2"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+
+    </LinearLayout>
 
+
+
+    </RelativeLayout>
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"animalapp.info\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"com.google.android.providers.gsf.permission.READ_GSERVICES\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.AnimalApp\">\r\n        <activity android:name=\".WriteActivity\"></activity>\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.maps.v2.API_KEY\"\r\n            android:value=\"AIzaSyA2K3_RUKmAon3ijyL1p9C6TX41KX5Erlc\" />\r\n\r\n        <activity android:name=\".PasswordActivity\" />\r\n        <activity android:name=\".LoginActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".MainActivity\"></activity>\r\n        <activity android:name=\".SignUpActivity\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision d6cdaa4604c5c1add42993dff7ceddc3ee8c5507)
+++ app/src/main/AndroidManifest.xml	(date 1614090806249)
@@ -14,21 +14,22 @@
         android:roundIcon="@mipmap/ic_launcher_round"
         android:supportsRtl="true"
         android:theme="@style/Theme.AnimalApp">
-        <activity android:name=".WriteActivity"></activity>
+        <activity android:name=".LoginActivity"></activity>
+        <activity android:name=".WriteActivity" />
 
         <meta-data
             android:name="com.google.android.maps.v2.API_KEY"
             android:value="AIzaSyA2K3_RUKmAon3ijyL1p9C6TX41KX5Erlc" />
 
         <activity android:name=".PasswordActivity" />
-        <activity android:name=".LoginActivity">
+        <activity android:name=".CalendarActivity">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-        <activity android:name=".MainActivity"></activity>
+        <activity android:name=".MainActivity" />
         <activity android:name=".SignUpActivity" />
     </application>
 
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021-02-16__12_58__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2021-02-16__12_58__Default_Changelist_.xml	(revision d6cdaa4604c5c1add42993dff7ceddc3ee8c5507)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2021-02-16__12_58__Default_Changelist_.xml	(revision d6cdaa4604c5c1add42993dff7ceddc3ee8c5507)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2021-02-16_오전_12_58_[Default_Changelist]" date="1613404704475" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2021-02-16_오전_12_58_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2021-02-16 오전 12:58 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2021-02-16_오전_12_58_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_2021-02-16_오전_12_58_[Default_Changelist]/shelved.patch	(revision d6cdaa4604c5c1add42993dff7ceddc3ee8c5507)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_2021-02-16_오전_12_58_[Default_Changelist]/shelved.patch	(revision d6cdaa4604c5c1add42993dff7ceddc3ee8c5507)
@@ -1,22 +0,0 @@
-Index: app/src/main/res/layout/activity_main.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"hihihi\"\r\n        tools:ignore=\"MissingConstraints\" />\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Hello World!\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Button\r\n        android:id=\"@+id/button\"\r\n        android:layout_width=\"240dp\"\r\n        android:layout_height=\"120dp\"\r\n        android:layout_marginStart=\"84dp\"\r\n        android:layout_marginLeft=\"84dp\"\r\n        android:layout_marginTop=\"120dp\"\r\n        android:text=\"버튼이다.\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    <Switch\r\n        android:id=\"@+id/switch1\"\r\n        android:layout_width=\"221dp\"\r\n        android:layout_height=\"99dp\"\r\n        android:layout_marginStart=\"64dp\"\r\n        android:layout_marginLeft=\"64dp\"\r\n        android:layout_marginTop=\"476dp\"\r\n        android:text=\"스위치다\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/res/layout/activity_main.xml	(revision e8c27f51377edbcb2d06c4fbc0681023d7b41cd9)
-+++ app/src/main/res/layout/activity_main.xml	(date 1613404231253)
-@@ -24,9 +24,9 @@
-         android:id="@+id/button"
-         android:layout_width="240dp"
-         android:layout_height="120dp"
--        android:layout_marginStart="84dp"
--        android:layout_marginLeft="84dp"
--        android:layout_marginTop="120dp"
-+        android:layout_marginStart="112dp"
-+        android:layout_marginLeft="112dp"
-+        android:layout_marginTop="264dp"
-         android:text="버튼이다."
-         app:layout_constraintStart_toStartOf="parent"
-         app:layout_constraintTop_toTopOf="parent" />
Index: app/src/main/java/animalapp/info/onDatDecorator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/animalapp/info/onDatDecorator.java	(date 1614079467685)
+++ app/src/main/java/animalapp/info/onDatDecorator.java	(date 1614079467685)
@@ -0,0 +1,35 @@
+package animalapp.info;
+
+import android.graphics.Color;
+import android.graphics.Typeface;
+import android.text.style.ForegroundColorSpan;
+import android.text.style.RelativeSizeSpan;
+import android.text.style.StyleSpan;
+
+import com.prolificinteractive.materialcalendarview.CalendarDay;
+import com.prolificinteractive.materialcalendarview.DayViewDecorator;
+import com.prolificinteractive.materialcalendarview.DayViewFacade;
+import com.prolificinteractive.materialcalendarview.MaterialCalendarView;
+import java.util.Date;
+
+public class onDatDecorator implements DayViewDecorator{
+    private CalendarDay date;
+
+    public onDatDecorator(){
+        date = CalendarDay.today();
+    }
+    @Override
+    public boolean shouldDecorate(CalendarDay day) {
+        return date != null && day.equals(date);
+    }
+
+    @Override
+    public void decorate(DayViewFacade view) {
+        view.addSpan(new StyleSpan(Typeface.BOLD));
+        view.addSpan(new RelativeSizeSpan(1.4f));
+        view.addSpan(new ForegroundColorSpan(Color.GREEN));
+    }
+    public void setDate(Date date) {
+        this.date = CalendarDay.from(date);
+    }
+}
Index: app/src/main/java/animalapp/info/EventDecorator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/animalapp/info/EventDecorator.java	(date 1614079725662)
+++ app/src/main/java/animalapp/info/EventDecorator.java	(date 1614079725662)
@@ -0,0 +1,33 @@
+package animalapp.info;
+
+import android.app.Activity;
+import android.graphics.drawable.Drawable;
+
+import com.prolificinteractive.materialcalendarview.CalendarDay;
+import com.prolificinteractive.materialcalendarview.DayViewDecorator;
+import com.prolificinteractive.materialcalendarview.DayViewFacade;
+
+import java.util.Collection;
+import java.util.HashSet;
+
+public class EventDecorator implements DayViewDecorator {
+    private final Drawable drawable;
+    private int color;
+    private HashSet<CalendarDay> dates;
+    public EventDecorator(int color, Collection<CalendarDay> dates, Activity context){
+        drawable = context.getResources().getDrawable(R.drawable.more);
+        this.color = color;
+        this.dates = new HashSet<>(dates);
+    }
+
+
+    @Override
+    public boolean shouldDecorate(CalendarDay day) {
+        return dates.contains(day);
+    }
+
+    @Override
+    public void decorate(DayViewFacade view) {
+        view.setSelectionDrawable(drawable);
+    }
+}
Index: app/src/main/java/animalapp/info/SundayDecorator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/animalapp/info/SundayDecorator.java	(date 1614081458427)
+++ app/src/main/java/animalapp/info/SundayDecorator.java	(date 1614081458427)
@@ -0,0 +1,30 @@
+package animalapp.info;
+
+import android.graphics.Color;
+import android.text.style.ForegroundColorSpan;
+
+import com.prolificinteractive.materialcalendarview.CalendarDay;
+import com.prolificinteractive.materialcalendarview.DayViewDecorator;
+import com.prolificinteractive.materialcalendarview.DayViewFacade;
+
+import java.util.Calendar;
+
+
+public class SundayDecorator implements DayViewDecorator {
+
+
+    private final Calendar calendar = Calendar.getInstance();
+    public SundayDecorator() {
+    }
+    @Override
+    public boolean shouldDecorate(CalendarDay day) {
+        day.copyTo(calendar);
+        int weekDay =calendar.get(Calendar.DAY_OF_WEEK);
+        return weekDay == Calendar.SUNDAY;
+    }
+
+    @Override
+    public void decorate(DayViewFacade view) {
+        view.addSpan(new ForegroundColorSpan(Color.RED));
+    }
+}
Index: app/src/main/java/animalapp/info/SaturdayDecorator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/animalapp/info/SaturdayDecorator.java	(date 1614067287397)
+++ app/src/main/java/animalapp/info/SaturdayDecorator.java	(date 1614067287397)
@@ -0,0 +1,28 @@
+package animalapp.info;
+
+import android.graphics.Color;
+import android.text.style.ForegroundColorSpan;
+
+import com.prolificinteractive.materialcalendarview.CalendarDay;
+import com.prolificinteractive.materialcalendarview.DayViewDecorator;
+import com.prolificinteractive.materialcalendarview.DayViewFacade;
+
+import java.util.Calendar;
+
+public class SaturdayDecorator implements DayViewDecorator {
+    private final Calendar calendar = Calendar.getInstance();
+    public SaturdayDecorator() {
+    }
+
+    @Override
+    public boolean shouldDecorate(CalendarDay day) {
+        day.copyTo(calendar);
+        int weekDay = calendar.get(Calendar.DAY_OF_WEEK);
+        return weekDay == Calendar.SATURDAY;
+    }
+
+    @Override
+    public void decorate(DayViewFacade view) {
+        view.addSpan(new ForegroundColorSpan(Color.BLUE));
+    }
+}
Index: app/src/main/res/drawable-v24/more.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable-v24/more.xml	(date 1529486144000)
+++ app/src/main/res/drawable-v24/more.xml	(date 1529486144000)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle" android:padding="10dp">/>
+    <corners
+        android:bottomRightRadius="6dp"
+        android:bottomLeftRadius="6dp"
+        android:topLeftRadius="6dp"
+        android:topRightRadius="6dp" />
+    <stroke
+
+        android:width="5px"
+
+        android:color="#a9dbf0cb" />
+
+</shape>
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n\r\n    defaultConfig {\r\n        applicationId \"animalapp.info\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        multiDexEnabled true\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'com.google.android.gms:play-services-maps:17.0.0'\r\n    implementation 'com.google.android.gms:play-services-location:18.0.0'\r\n    implementation 'com.google.firebase:firebase-firestore'\r\n    //noinspection GradleCompatible\r\n    implementation 'com.android.support:appcompat-v7:28.0.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'com.google.firebase:firebase-database:19.6.0'\r\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\r\n    implementation 'com.google.firebase:firebase-auth:20.0.2'\r\n    implementation 'com.google.firebase:firebase-firestore:22.1.0'\r\n    implementation 'com.google.firebase:firebase-firestore'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    implementation \"androidx.recyclerview:recyclerview:1.1.0\"\r\n    // For control over item selection of both touch and mouse driven selection\r\n    implementation \"androidx.recyclerview:recyclerview-selection:1.1.0\"\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:26.5.0')\r\n    implementation 'com.google.firebase:firebase-auth'\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n}\r\napply plugin: 'com.google.gms.google-services'\r\napply plugin: 'com.android.application'\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision d6cdaa4604c5c1add42993dff7ceddc3ee8c5507)
+++ app/build.gradle	(date 1614012373366)
@@ -44,6 +44,7 @@
     implementation 'com.google.firebase:firebase-auth:20.0.2'
     implementation 'com.google.firebase:firebase-firestore:22.1.0'
     implementation 'com.google.firebase:firebase-firestore'
+
     testImplementation 'junit:junit:4.13.2'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
@@ -54,7 +55,10 @@
     implementation platform('com.google.firebase:firebase-bom:26.5.0')
     implementation 'com.google.firebase:firebase-auth'
     implementation 'com.google.firebase:firebase-analytics'
+
+    implementation 'com.prolificinteractive:material-calendarview:1.4.3'
 }
+
 apply plugin: 'com.google.gms.google-services'
 apply plugin: 'com.android.application'
 
Index: app/src/main/res/layout/activity_calendar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_calendar.xml	(date 1614090460260)
+++ app/src/main/res/layout/activity_calendar.xml	(date 1614090460260)
@@ -0,0 +1,24 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".CalendarActivity">
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/user_name"/>
+        <com.prolificinteractive.materialcalendarview.MaterialCalendarView
+            android:id="@+id/materialCalendar"
+            app:mcv_selectionColor="#d2d2d2"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content" />
+
+    </LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/animalapp/info/CalendarActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/animalapp/info/CalendarActivity.java	(date 1614090668647)
+++ app/src/main/java/animalapp/info/CalendarActivity.java	(date 1614090668647)
@@ -0,0 +1,123 @@
+package animalapp.info;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.RequiresApi;
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.graphics.Color;
+import android.os.AsyncTask;
+import android.os.Build;
+import android.os.Bundle;
+import android.widget.TextView;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.QuerySnapshot;
+import com.prolificinteractive.materialcalendarview.CalendarDay;
+import com.prolificinteractive.materialcalendarview.CalendarMode;
+import com.prolificinteractive.materialcalendarview.MaterialCalendarView;
+
+import java.time.format.DateTimeFormatter;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.List;
+
+@RequiresApi(api = Build.VERSION_CODES.O)
+public class CalendarActivity extends AppCompatActivity {
+    private static final DateTimeFormatter FORMATTER = DateTimeFormatter.ofPattern("EEE, d MMM yyyy");
+    MaterialCalendarView calendarView;
+    TextView user_name;
+    FirebaseAuth mAuth;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_calendar);
+        user_name=(TextView)findViewById(R.id.user_name);
+        calendarView= (MaterialCalendarView)findViewById(R.id.materialCalendar);
+        calendarView.state().edit()
+                .setFirstDayOfWeek(Calendar.SUNDAY)
+                .setMinimumDate(CalendarDay.from(2017, 0, 1)) // 달력의 시작
+                .setMaximumDate(CalendarDay.from(2030, 11, 31)) // 달력의 끝
+                .setCalendarDisplayMode(CalendarMode.MONTHS)
+                .commit();
+
+        calendarView.addDecorators(
+                new SundayDecorator(),
+                new SaturdayDecorator(),
+                new onDatDecorator());
+
+        getData();
+
+    }
+    private void getData(){
+        FirebaseUser user= FirebaseAuth.getInstance().getCurrentUser();//현재 로그인한 유저 ->Authentication(?)
+        FirebaseFirestore db=FirebaseFirestore.getInstance();//firestore db
+        final String current= user.getEmail();//로그인할 때 그 이메일 가져옴
+        db.collection("users")//firestore users
+                .whereEqualTo("id",current)//firestore id와 user email같은 곳?
+                .get()//가져와
+                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {
+                    @Override
+                    public void onComplete(@NonNull Task<QuerySnapshot> task) {
+                        if(task.isSuccessful()){
+                            for(DocumentSnapshot documentSnapshot : task.getResult()){
+                                user_name.setText((CharSequence) documentSnapshot.get("pet_name")+"의 달력");
+                            }
+                        }
+                    }
+                });
+    }
+    private class ApiSimulator extends AsyncTask<Void, Void, List<CalendarDay>> {
+
+        String[] Time_Result;
+
+        ApiSimulator(String[] Time_Result) {
+            this.Time_Result = Time_Result;
+        }
+
+        @Override
+        protected List<CalendarDay> doInBackground(@NonNull Void... voids) {
+            try {
+                Thread.sleep(500);
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+
+            Calendar calendar = Calendar.getInstance();
+            ArrayList<CalendarDay> dates = new ArrayList<>();
+
+            /*특정날짜 달력에 점표시해주는곳*/
+            /*월은 0이 1월 년,일은 그대로*/
+            //string 문자열인 Time_Result 을 받아와서 ,를 기준으로짜르고 string을 int 로 변환
+            for (int i = 0; i < Time_Result.length; i++) {
+                CalendarDay day = CalendarDay.from(calendar);
+                String[] time = Time_Result[i].split(",");
+                int year = Integer.parseInt(time[0]);
+                int month = Integer.parseInt(time[1]);
+                int dayy = Integer.parseInt(time[2]);
+
+                dates.add(day);
+                calendar.set(year, month - 1, dayy);
+            }
+
+            return dates;
+        }
+        protected void onPostExecute(@NonNull List<CalendarDay> calendarDays) {
+            super.onPostExecute(calendarDays);
+
+            if (isFinishing()) {
+                return;
+            }
+
+            calendarView.addDecorator(new EventDecorator(Color.GREEN, calendarDays,CalendarActivity.this));
+        }
+
+
+
+
+    }
+}
\ No newline at end of file
